/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package agenda;

import static agenda.Tareas.listaEventos;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalema
 */
public class CargarTareas extends javax.swing.JInternalFrame {

    public DefaultTableModel modelo=new DefaultTableModel(){
    
        public boolean isCellEditable(){
            return false;
        }
    
    
    };
    
    /**
     * Creates new form CargarTareas
     */
    public CargarTareas() {
        initComponents();
        armarColumnas();
        jcbCategoriaActionPerformed();
        cargarFecha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcFecha = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAgenda = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jtEvento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbCategoria = new javax.swing.JComboBox<>();
        jbtAgregar = new javax.swing.JButton();
        jbtEliminar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("CREAR TAREAS");

        jcFecha.setMinSelectableDate(new java.util.Date(-62135755121000L));

        jLabel2.setText("Seleccione una Fecha");
        jLabel2.setFocusable(false);

        jTAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTAgenda);

        jLabel3.setText("Evento");
        jLabel3.setFocusable(false);

        jtEvento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEventoFocusLost(evt);
            }
        });

        jLabel4.setText("Categoria");
        jLabel4.setFocusable(false);

        jbtAgregar.setText("Agregar");
        jbtAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAgregarActionPerformed(evt);
            }
        });

        jbtEliminar.setText("Eliminar");
        jbtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtAgregar)
                        .addGap(30, 30, 30)
                        .addComponent(jbtEliminar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(327, 327, 327)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(jtEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtAgregar)
                    .addComponent(jbtEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAgregarActionPerformed
        
        if(jcbCategoria.getSelectedItem() == Categorias.SELECCIONAR){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una categoria");
            jcbCategoria.requestFocus();
        }else{
            Categorias laCategorias=jcbCategoria.getItemAt(jcbCategoria.getSelectedIndex());
            Eventos nuevo=new Eventos(jtEvento.getText(), "Pendiente", jcFecha.getDate(), laCategorias);
            Tareas.listaEventos.add(new Eventos(jtEvento.getText(), "Pendiente", jcFecha.getDate(), laCategorias));
            //veoLista(listaEventos);
            armarFilas(listaEventos);
        }
    }//GEN-LAST:event_jbtAgregarActionPerformed

    private void jtEventoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEventoFocusLost
        if(jtEvento.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "El campo Evento no puede estar vac√≠o");
            jtEvento.requestFocus();
        }
    }//GEN-LAST:event_jtEventoFocusLost

    private void jbtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEliminarActionPerformed
        int selecFila=jTAgenda.getSelectedRow();
        if(selecFila!=-1){
            modelo.removeRow(selecFila);
            Tareas.listaEventos.remove(selecFila);
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar alguna fila");
        }
    }//GEN-LAST:event_jbtEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTAgenda;
    private javax.swing.JButton jbtAgregar;
    private javax.swing.JButton jbtEliminar;
    private com.toedter.calendar.JDateChooser jcFecha;
    private javax.swing.JComboBox<Categorias> jcbCategoria;
    private javax.swing.JTextField jtEvento;
    // End of variables declaration//GEN-END:variables

    private void armarColumnas(){
        modelo.addColumn("Nombre Tarea");
        modelo.addColumn("Estado");
        modelo.addColumn("Fecha de inicio");
        modelo.addColumn("Categoria");
        jTAgenda.setModel(modelo);
    }

       private void jcbCategoriaActionPerformed() {                                             
        // TODO add your handling code here:
       jcbCategoria.addItem(Categorias.SELECCIONAR);
       jcbCategoria.addItem(Categorias.TRABAJO);
       jcbCategoria.addItem(Categorias.PERSONAL);
       jcbCategoria.addItem(Categorias.MEDICO);
        
    }     

       private void cargarFecha(){
           
           Calendar miCale=new GregorianCalendar();
           jcFecha.setCalendar(miCale);
       }

       private void armarFilas(ArrayList<Eventos> vieneEventos){
           //modelo.addRow(new Object[] {vieneEventos.getNombre(), vieneEventos.getEstado(), vieneEventos.getFecha(), vieneEventos.getLasCategorias()});
           //borrarContenido();
           
           if(Tareas.listaEventos.size()-1 >=0){
              Eventos aux=Tareas.listaEventos.get(Tareas.listaEventos.size()-1);
              SimpleDateFormat correcto=new SimpleDateFormat("dd-MM-yyyy");
              String fechaBien=correcto.format(aux.getFecha());
              modelo.addRow(new Object[]{aux.getNombre(), aux.getEstado(), fechaBien, aux.getLasCategorias()});
           }
//           for (Eventos laLista : vieneEventos) {
//              if(jTAgenda.){
//               
//               modelo.addRow(new Object[]{laLista.getNombre(), laLista.getEstado(), fechaBien, laLista.getLasCategorias()});
//              }
//           }
            
       }
       
       private void borrarContenido(){
           int fila=jTAgenda.getRowCount();
           for (int i = fila; i > 0; i--) {
               modelo.removeRow(i);
           }
       }
       
       private void veoLista(ArrayList<Eventos> lista){
          
           for (Eventos laLista : lista) {
               System.out.println("Muestro los componentes de la lista Nombre: "+laLista.getNombre()
                       +" Estado "+laLista.getEstado()+" la fecha "+laLista.getFecha()+" la catagoria "+laLista.getLasCategorias());
           }
          
       }
}
